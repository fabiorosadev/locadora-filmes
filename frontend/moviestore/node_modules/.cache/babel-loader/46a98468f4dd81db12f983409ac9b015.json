{"ast":null,"code":"var _jsxFileName = \"/Users/fabiorosa/Study/locadora-filmes/frontend/moviestore/src/pages/Movies/index.js\";\n\n/* eslint-disable react/forbid-prop-types */\nimport React, { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport PropTypes from 'prop-types';\nimport Table from '../../components/Table';\nimport { getMovies, deleteMovie, deleteMovies } from '../../services/Movies/movieService';\nimport useStyles from './styles';\nexport default function Movies({\n  history\n}) {\n  const classes = useStyles();\n  const [selected, setSelected] = useState([]);\n  const [rows, setRows] = useState([]);\n  const headCells = [{\n    id: 'name',\n    numeric: false,\n    disablePadding: true,\n    label: 'Nome'\n  }, {\n    id: 'genre',\n    numeric: false,\n    disablePadding: true,\n    label: 'Gênero'\n  }, {\n    id: 'creationDate',\n    numeric: false,\n    disablePadding: true,\n    label: 'Data Criação'\n  }, {\n    id: 'status',\n    numeric: false,\n    disablePadding: true,\n    label: 'Status'\n  }];\n\n  async function loadMovies() {\n    const {\n      data\n    } = await getMovies();\n    const movies = data.map(m => {\n      return {\n        id: m.id,\n        name: m.name,\n        genre: m.genre.name,\n        creationDate: new Date(m.creationDate).toLocaleDateString(),\n        status: m.status === 1 ? 'Ativo' : 'Inativo'\n      };\n    });\n    setRows(movies);\n  }\n\n  useEffect(() => {\n    loadMovies();\n  }, []);\n\n  const handleAdd = () => {\n    history.push('/movies/0');\n  };\n\n  const handleEdit = () => {\n    const movieId = selected[0];\n    history.push(`/movies/${movieId}`);\n  };\n\n  const handleDelete = async () => {\n    if (selected.length > 1) {\n      await deleteMovies(selected);\n    } else {\n      const movieId = selected[0];\n      await deleteMovie(movieId);\n    }\n\n    setSelected([]);\n    await loadMovies();\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    title: \"Filmes\",\n    headCells: headCells,\n    rows: rows,\n    selected: selected,\n    setSelected: setSelected,\n    defaultSortedProperty: \"name\",\n    onAdd: handleAdd,\n    onEdit: handleEdit,\n    onDelete: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })));\n}\nMovies.defaultProps = {\n  history: null,\n  moviesSelected: null,\n  onSelectMovie: null\n};\nMovies.propTypes = {\n  history: PropTypes.any,\n  moviesSelected: PropTypes.array,\n  onSelectMovie: PropTypes.func\n};","map":{"version":3,"sources":["/Users/fabiorosa/Study/locadora-filmes/frontend/moviestore/src/pages/Movies/index.js"],"names":["React","useState","useEffect","Container","CssBaseline","PropTypes","Table","getMovies","deleteMovie","deleteMovies","useStyles","Movies","history","classes","selected","setSelected","rows","setRows","headCells","id","numeric","disablePadding","label","loadMovies","data","movies","map","m","name","genre","creationDate","Date","toLocaleDateString","status","handleAdd","push","handleEdit","movieId","handleDelete","length","paper","defaultProps","moviesSelected","onSelectMovie","propTypes","any","array","func"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SACEC,SADF,EAEEC,WAFF,EAGEC,YAHF,QAIO,oCAJP;AAKA,OAAOC,SAAP,MAAsB,UAAtB;AAEA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA6B;AAC1C,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMiB,SAAS,GAAG,CAChB;AACEC,IAAAA,EAAE,EAAE,MADN;AAEEC,IAAAA,OAAO,EAAE,KAFX;AAGEC,IAAAA,cAAc,EAAE,IAHlB;AAIEC,IAAAA,KAAK,EAAE;AAJT,GADgB,EAOhB;AACEH,IAAAA,EAAE,EAAE,OADN;AAEEC,IAAAA,OAAO,EAAE,KAFX;AAGEC,IAAAA,cAAc,EAAE,IAHlB;AAIEC,IAAAA,KAAK,EAAE;AAJT,GAPgB,EAahB;AACEH,IAAAA,EAAE,EAAE,cADN;AAEEC,IAAAA,OAAO,EAAE,KAFX;AAGEC,IAAAA,cAAc,EAAE,IAHlB;AAIEC,IAAAA,KAAK,EAAE;AAJT,GAbgB,EAmBhB;AAAEH,IAAAA,EAAE,EAAE,QAAN;AAAgBC,IAAAA,OAAO,EAAE,KAAzB;AAAgCC,IAAAA,cAAc,EAAE,IAAhD;AAAsDC,IAAAA,KAAK,EAAE;AAA7D,GAnBgB,CAAlB;;AAsBA,iBAAeC,UAAf,GAA4B;AAC1B,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMjB,SAAS,EAAhC;AACA,UAAMkB,MAAM,GAAGD,IAAI,CAACE,GAAL,CAASC,CAAC,IAAI;AAC3B,aAAO;AACLR,QAAAA,EAAE,EAAEQ,CAAC,CAACR,EADD;AAELS,QAAAA,IAAI,EAAED,CAAC,CAACC,IAFH;AAGLC,QAAAA,KAAK,EAAEF,CAAC,CAACE,KAAF,CAAQD,IAHV;AAILE,QAAAA,YAAY,EAAE,IAAIC,IAAJ,CAASJ,CAAC,CAACG,YAAX,EAAyBE,kBAAzB,EAJT;AAKLC,QAAAA,MAAM,EAAEN,CAAC,CAACM,MAAF,KAAa,CAAb,GAAiB,OAAjB,GAA2B;AAL9B,OAAP;AAOD,KARc,CAAf;AASAhB,IAAAA,OAAO,CAACQ,MAAD,CAAP;AACD;;AAEDvB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMW,SAAS,GAAG,MAAM;AACtBtB,IAAAA,OAAO,CAACuB,IAAR,CAAa,WAAb;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvB,UAAMC,OAAO,GAAGvB,QAAQ,CAAC,CAAD,CAAxB;AACAF,IAAAA,OAAO,CAACuB,IAAR,CAAc,WAAUE,OAAQ,EAAhC;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAG,YAAY;AAC/B,QAAIxB,QAAQ,CAACyB,MAAT,GAAkB,CAAtB,EAAyB;AACvB,YAAM9B,YAAY,CAACK,QAAD,CAAlB;AACD,KAFD,MAEO;AACL,YAAMuB,OAAO,GAAGvB,QAAQ,CAAC,CAAD,CAAxB;AACA,YAAMN,WAAW,CAAC6B,OAAD,CAAjB;AACD;;AACDtB,IAAAA,WAAW,CAAC,EAAD,CAAX;AACA,UAAMQ,UAAU,EAAhB;AACD,GATD;;AAWA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAEV,OAAO,CAAC2B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,SAAS,EAAEtB,SAFb;AAGE,IAAA,IAAI,EAAEF,IAHR;AAIE,IAAA,QAAQ,EAAEF,QAJZ;AAKE,IAAA,WAAW,EAAEC,WALf;AAME,IAAA,qBAAqB,EAAC,MANxB;AAOE,IAAA,KAAK,EAAEmB,SAPT;AAQE,IAAA,MAAM,EAAEE,UARV;AASE,IAAA,QAAQ,EAAEE,YATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAkBD;AAED3B,MAAM,CAAC8B,YAAP,GAAsB;AACpB7B,EAAAA,OAAO,EAAE,IADW;AAEpB8B,EAAAA,cAAc,EAAE,IAFI;AAGpBC,EAAAA,aAAa,EAAE;AAHK,CAAtB;AAMAhC,MAAM,CAACiC,SAAP,GAAmB;AACjBhC,EAAAA,OAAO,EAAEP,SAAS,CAACwC,GADF;AAEjBH,EAAAA,cAAc,EAAErC,SAAS,CAACyC,KAFT;AAGjBH,EAAAA,aAAa,EAAEtC,SAAS,CAAC0C;AAHR,CAAnB","sourcesContent":["/* eslint-disable react/forbid-prop-types */\nimport React, { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport PropTypes from 'prop-types';\nimport Table from '../../components/Table';\nimport {\n  getMovies,\n  deleteMovie,\n  deleteMovies,\n} from '../../services/Movies/movieService';\nimport useStyles from './styles';\n\nexport default function Movies({ history }) {\n  const classes = useStyles();\n  const [selected, setSelected] = useState([]);\n  const [rows, setRows] = useState([]);\n\n  const headCells = [\n    {\n      id: 'name',\n      numeric: false,\n      disablePadding: true,\n      label: 'Nome',\n    },\n    {\n      id: 'genre',\n      numeric: false,\n      disablePadding: true,\n      label: 'Gênero',\n    },\n    {\n      id: 'creationDate',\n      numeric: false,\n      disablePadding: true,\n      label: 'Data Criação',\n    },\n    { id: 'status', numeric: false, disablePadding: true, label: 'Status' },\n  ];\n\n  async function loadMovies() {\n    const { data } = await getMovies();\n    const movies = data.map(m => {\n      return {\n        id: m.id,\n        name: m.name,\n        genre: m.genre.name,\n        creationDate: new Date(m.creationDate).toLocaleDateString(),\n        status: m.status === 1 ? 'Ativo' : 'Inativo',\n      };\n    });\n    setRows(movies);\n  }\n\n  useEffect(() => {\n    loadMovies();\n  }, []);\n\n  const handleAdd = () => {\n    history.push('/movies/0');\n  };\n\n  const handleEdit = () => {\n    const movieId = selected[0];\n    history.push(`/movies/${movieId}`);\n  };\n\n  const handleDelete = async () => {\n    if (selected.length > 1) {\n      await deleteMovies(selected);\n    } else {\n      const movieId = selected[0];\n      await deleteMovie(movieId);\n    }\n    setSelected([]);\n    await loadMovies();\n  };\n\n  return (\n    <Container component=\"main\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Table\n          title=\"Filmes\"\n          headCells={headCells}\n          rows={rows}\n          selected={selected}\n          setSelected={setSelected}\n          defaultSortedProperty=\"name\"\n          onAdd={handleAdd}\n          onEdit={handleEdit}\n          onDelete={handleDelete}\n        />\n      </div>\n    </Container>\n  );\n}\n\nMovies.defaultProps = {\n  history: null,\n  moviesSelected: null,\n  onSelectMovie: null,\n};\n\nMovies.propTypes = {\n  history: PropTypes.any,\n  moviesSelected: PropTypes.array,\n  onSelectMovie: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}