{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'react-toastify';\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.interceptors.response.use(null, error => {\n  const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\n\n  if (!expectedError) {\n    toast.error('Ocorreu um erro insperado!', error);\n  }\n\n  return Promise.reject(error);\n});\nexport function setJwt(jwt) {\n  axios.defaults.headers.common = {\n    Authorization: `bearer ${jwt}`\n  };\n}\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};","map":{"version":3,"sources":["/Users/fabiorosa/Study/locadora-filmes/frontend/moviestore/src/services/httpService.js"],"names":["axios","toast","defaults","baseURL","process","env","REACT_APP_API_URL","interceptors","response","use","error","expectedError","status","Promise","reject","setJwt","jwt","headers","common","Authorization","get","post","put","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyBC,OAAO,CAACC,GAAR,CAAYC,iBAArC;AAEAN,KAAK,CAACO,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,IAAhC,EAAsCC,KAAK,IAAI;AAC7C,QAAMC,aAAa,GACjBD,KAAK,CAACF,QAAN,IACAE,KAAK,CAACF,QAAN,CAAeI,MAAf,IAAyB,GADzB,IAEAF,KAAK,CAACF,QAAN,CAAeI,MAAf,GAAwB,GAH1B;;AAKA,MAAI,CAACD,aAAL,EAAoB;AAClBV,IAAAA,KAAK,CAACS,KAAN,CAAY,4BAAZ,EAA0CA,KAA1C;AACD;;AAED,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAXD;AAaA,OAAO,SAASK,MAAT,CAAgBC,GAAhB,EAAqB;AAC1BhB,EAAAA,KAAK,CAACE,QAAN,CAAee,OAAf,CAAuBC,MAAvB,GAAgC;AAAEC,IAAAA,aAAa,EAAG,UAASH,GAAI;AAA/B,GAAhC;AACD;AAED,eAAe;AACbI,EAAAA,GAAG,EAAEpB,KAAK,CAACoB,GADE;AAEbC,EAAAA,IAAI,EAAErB,KAAK,CAACqB,IAFC;AAGbC,EAAAA,GAAG,EAAEtB,KAAK,CAACsB,GAHE;AAIbC,EAAAA,MAAM,EAAEvB,KAAK,CAACuB,MAJD;AAKbR,EAAAA;AALa,CAAf","sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    toast.error('Ocorreu um erro insperado!', error);\n  }\n\n  return Promise.reject(error);\n});\n\nexport function setJwt(jwt) {\n  axios.defaults.headers.common = { Authorization: `bearer ${jwt}` };\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt,\n};\n"]},"metadata":{},"sourceType":"module"}