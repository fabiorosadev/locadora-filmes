{"ast":null,"code":"var _jsxFileName = \"/Users/fabiorosa/Study/locadora-filmes/frontend/moviestore/src/pages/RentalForm/index.js\";\n\n/* eslint-disable no-param-reassign */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\n/* eslint-disable react/forbid-prop-types */\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { TextField } from 'unform-material-ui';\nimport PropTypes from 'prop-types';\nimport { getRental, saveRental } from '../../services/Rentals/rentalService';\nimport { getMovies } from '../../services/Movies/movieService';\nimport useStyles from './styles';\nexport default function RentalForm({\n  history,\n  match\n}) {\n  const classes = useStyles();\n  const formRef = useRef(null);\n  const [rental, setRental] = useState({\n    id: 0,\n    customerCpf: '',\n    rentalDate: new Date().toISOString()\n  });\n  const [movies, setMovies] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedMovies, setSelectedMovies] = useState([]);\n  const schema = Yup.object().shape({\n    customerCpf: Yup.string().required('CPF é obrigatório!'),\n    rentalDate: Yup.date().required('Data de Locação é obrigatória!')\n  });\n\n  const handleSubmit = async data => {\n    try {\n      // Remove all previous errors\n      formRef.current.setErrors({});\n      await schema.validate(data, {\n        abortEarly: false\n      }); // Validation passed\n\n      await saveRental(rental);\n      history.push('/rentals');\n    } catch (err) {\n      const validationErrors = {};\n\n      if (err instanceof Yup.ValidationError) {\n        err.inner.forEach(error => {\n          validationErrors[error.path] = error.message;\n        });\n        formRef.current.setErrors(validationErrors);\n      }\n    }\n  };\n\n  const handleCancel = () => {\n    history.push('/rentals');\n  };\n\n  const handleSelectedDate = date => {\n    setSelectedDate(date);\n  };\n\n  useEffect(() => {\n    const loadData = async () => {\n      const {\n        data: allMovies\n      } = await getMovies();\n      setMovies(allMovies);\n      const {\n        id\n      } = match.params;\n\n      if (id > 0) {\n        const {\n          data\n        } = await getRental(id);\n        formRef.current.setData(data);\n        setRental(data);\n      } else {\n        formRef.current.setData(rental);\n      }\n    };\n\n    loadData();\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Filme\"), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"customerCpf\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    label: \"CPF Cliente\",\n    autoComplete: \"customrCpf\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"dd/MM/yyyy\",\n    margin: \"normal\",\n    label: \"Data Loca\\xE7\\xE3o\",\n    value: selectedDate,\n    onChange: handleSelectedDate,\n    KeyboardButtonProps: {\n      lang: 'pt-BR'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Salvar\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Cancelar\"))));\n}\nRentalForm.defaultProps = {\n  history: null,\n  match: null\n};\nRentalForm.propTypes = {\n  history: PropTypes.any,\n  match: PropTypes.any\n};","map":{"version":3,"sources":["/Users/fabiorosa/Study/locadora-filmes/frontend/moviestore/src/pages/RentalForm/index.js"],"names":["React","useRef","useEffect","useState","Form","Yup","Button","Container","CssBaseline","Typography","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","TextField","PropTypes","getRental","saveRental","getMovies","useStyles","RentalForm","history","match","classes","formRef","rental","setRental","id","customerCpf","rentalDate","Date","toISOString","movies","setMovies","selectedDate","setSelectedDate","selectedMovies","setSelectedMovies","schema","object","shape","string","required","date","handleSubmit","data","current","setErrors","validate","abortEarly","push","err","validationErrors","ValidationError","inner","forEach","error","path","message","handleCancel","handleSelectedDate","loadData","allMovies","params","setData","paper","form","lang","submit","defaultProps","propTypes","any"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react/forbid-prop-types */\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { TextField } from 'unform-material-ui';\nimport PropTypes from 'prop-types';\nimport { getRental, saveRental } from '../../services/Rentals/rentalService';\nimport { getMovies } from '../../services/Movies/movieService';\nimport useStyles from './styles';\n\nexport default function RentalForm({ history, match }) {\n  const classes = useStyles();\n\n  const formRef = useRef(null);\n\n  const [rental, setRental] = useState({\n    id: 0,\n    customerCpf: '',\n    rentalDate: new Date().toISOString(),\n  });\n\n  const [movies, setMovies] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedMovies, setSelectedMovies] = useState([]);\n\n  const schema = Yup.object().shape({\n    customerCpf: Yup.string().required('CPF é obrigatório!'),\n    rentalDate: Yup.date().required('Data de Locação é obrigatória!'),\n  });\n\n  const handleSubmit = async data => {\n    try {\n      // Remove all previous errors\n      formRef.current.setErrors({});\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n      // Validation passed\n      await saveRental(rental);\n      history.push('/rentals');\n    } catch (err) {\n      const validationErrors = {};\n      if (err instanceof Yup.ValidationError) {\n        err.inner.forEach(error => {\n          validationErrors[error.path] = error.message;\n        });\n        formRef.current.setErrors(validationErrors);\n      }\n    }\n  };\n\n  const handleCancel = () => {\n    history.push('/rentals');\n  };\n\n  const handleSelectedDate = date => {\n    setSelectedDate(date);\n  };\n\n  useEffect(() => {\n    const loadData = async () => {\n      const { data: allMovies } = await getMovies();\n      setMovies(allMovies);\n      const { id } = match.params;\n      if (id > 0) {\n        const { data } = await getRental(id);\n\n        formRef.current.setData(data);\n        setRental(data);\n      } else {\n        formRef.current.setData(rental);\n      }\n    };\n    loadData();\n  }, []);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Filme\n        </Typography>\n        <Form\n          ref={formRef}\n          onSubmit={handleSubmit}\n          className={classes.form}\n          noValidate\n        >\n          <TextField\n            name=\"customerCpf\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            label=\"CPF Cliente\"\n            autoComplete=\"customrCpf\"\n            autoFocus\n          />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              disableToolbar\n              variant=\"inline\"\n              format=\"dd/MM/yyyy\"\n              margin=\"normal\"\n              label=\"Data Locação\"\n              value={selectedDate}\n              onChange={handleSelectedDate}\n              KeyboardButtonProps={{\n                lang: 'pt-BR',\n              }}\n            />\n          </MuiPickersUtilsProvider>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Salvar\n          </Button>\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={handleCancel}\n          >\n            Cancelar\n          </Button>\n        </Form>\n      </div>\n    </Container>\n  );\n}\n\nRentalForm.defaultProps = {\n  history: null,\n  match: null,\n};\n\nRentalForm.propTypes = {\n  history: PropTypes.any,\n  match: PropTypes.any,\n};\n"]},"metadata":{},"sourceType":"module"}