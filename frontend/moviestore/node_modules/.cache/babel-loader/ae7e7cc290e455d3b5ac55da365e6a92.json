{"ast":null,"code":"var _jsxFileName = \"/Users/fabiorosa/Study/locadora-filmes/frontend/moviestore/src/pages/RentalForm/index.js\";\n\n/* eslint-disable no-param-reassign */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\n/* eslint-disable react/forbid-prop-types */\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport MomentUtils from '@date-io/moment';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { TextField } from 'unform-material-ui';\nimport FormControl from '@material-ui/core/FormControl';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport MovieListDialog from './RentalFormMovieList';\nimport Table from '../../components/Table';\nimport { getRental, saveRental } from '../../services/Rentals/rentalService';\nimport { getMovies } from '../../services/Movies/movieService';\nimport useStyles from './styles';\nexport default function RentalForm({\n  history,\n  match\n}) {\n  const classes = useStyles();\n  const formRef = useRef(null);\n  const [rental, setRental] = useState({\n    id: 0,\n    customerCpf: '',\n    rentalDate: new Date().toISOString()\n  });\n  const [movies, setMovies] = useState([]);\n  const [rentalMovies, setRentalMovies] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedMovies, setSelectedMovies] = useState([]);\n  const schema = Yup.object().shape({\n    customerCpf: Yup.string().required('CPF é obrigatório!')\n  });\n\n  const handleSubmit = async data => {\n    try {\n      // Remove all previous errors\n      formRef.current.setErrors({});\n      await schema.validate(data, {\n        abortEarly: false\n      }); // Validation passed\n\n      data.rentalDate = selectedDate;\n      console.log(rentalMovies);\n\n      if (rentalMovies.length <= 0) {\n        toast.error('Pelo menos um filme deve ser adicionado!');\n        return;\n      }\n\n      data.movieRentals = rentalMovies.map(mr => {\n        return {\n          movieId: mr.id,\n          rentalId: rental.id\n        };\n      });\n      await saveRental(data);\n      history.push('/rentals');\n    } catch (err) {\n      const validationErrors = {};\n\n      if (err instanceof Yup.ValidationError) {\n        err.inner.forEach(error => {\n          validationErrors[error.path] = error.message;\n        });\n        formRef.current.setErrors(validationErrors);\n      }\n    }\n  };\n\n  const movieHeadCells = [{\n    id: 'name',\n    numeric: false,\n    disablePadding: true,\n    label: 'Nome'\n  }, {\n    id: 'genre',\n    numeric: false,\n    disablePadding: true,\n    label: 'Gênero'\n  }];\n\n  const handleCancel = () => {\n    history.push('/rentals');\n  };\n\n  const handleSelectedDate = date => {\n    setSelectedDate(date);\n  };\n\n  const mapToMoviesListViewModel = moviesList => {\n    return moviesList.map(m => {\n      return {\n        id: m.id,\n        name: m.name,\n        genre: m.genre.name,\n        creationDate: new Date(m.creationDate).toLocaleDateString(),\n        status: m.status === 1 ? 'Ativo' : 'Inativo'\n      };\n    });\n  };\n\n  const handleDeleteMovie = async () => {\n    const rentalMoviesIds = rentalMovies.map(r => r.id);\n    const originalMovies = movies.filter(m => rentalMoviesIds.indexOf(m.id) !== -1);\n    const newRentalMovies = originalMovies.filter(rm => selectedMovies.indexOf(rm.id) === -1);\n    setRentalMovies(mapToMoviesListViewModel(newRentalMovies));\n    setSelectedMovies([]);\n  };\n\n  const handleSelectMovie = moviesSelectedIds => {\n    const originalMoviesSelected = movies.filter(m => moviesSelectedIds.indexOf(m.id) !== -1);\n    setRentalMovies(mapToMoviesListViewModel(originalMoviesSelected));\n    setSelectedMovies([]);\n  };\n\n  useEffect(() => {\n    const loadData = async () => {\n      const {\n        data: allMovies\n      } = await getMovies();\n      setMovies(allMovies);\n      const {\n        id\n      } = match.params;\n      console.log(id);\n\n      if (id > 0) {\n        const {\n          data\n        } = await getRental(id);\n        console.log(data);\n        const rentalMoviesIds = data.movieRentals.map(mr => mr.movieId);\n        const actualRentalOriginalMovies = movies.filter(m => rentalMoviesIds.indexOf(m.id) !== -1);\n        console.log(allMovies);\n        console.log(rentalMoviesIds);\n        formRef.current.setData(data);\n        setRental(data);\n        console.log(mapToMoviesListViewModel(actualRentalOriginalMovies));\n        setRentalMovies(mapToMoviesListViewModel(actualRentalOriginalMovies));\n      } else {\n        formRef.current.setData(rental);\n      }\n    };\n\n    loadData();\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, \"Filme\"), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"customerCpf\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    label: \"CPF Cliente\",\n    autoComplete: \"customrCpf\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"DD/MM/YYYY\",\n    margin: \"normal\",\n    label: \"Data Loca\\xE7\\xE3o\",\n    value: selectedDate,\n    onChange: handleSelectedDate,\n    KeyboardButtonProps: {\n      lang: 'pt-BR'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(MovieListDialog, {\n    onConfirm: handleSelectMovie,\n    selectedItems: rentalMovies.map(r => r.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    title: \"Filmes\",\n    headCells: movieHeadCells,\n    rows: rentalMovies,\n    selected: selectedMovies,\n    setSelected: setSelectedMovies,\n    defaultSortedProperty: \"name\",\n    onDelete: handleDeleteMovie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, \"Salvar\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, \"Cancelar\"))));\n}\nRentalForm.defaultProps = {\n  history: null,\n  match: null\n};\nRentalForm.propTypes = {\n  history: PropTypes.any,\n  match: PropTypes.any\n};","map":{"version":3,"sources":["/Users/fabiorosa/Study/locadora-filmes/frontend/moviestore/src/pages/RentalForm/index.js"],"names":["React","useRef","useEffect","useState","Form","Yup","Button","Container","CssBaseline","Typography","MomentUtils","MuiPickersUtilsProvider","KeyboardDatePicker","TextField","FormControl","PropTypes","toast","MovieListDialog","Table","getRental","saveRental","getMovies","useStyles","RentalForm","history","match","classes","formRef","rental","setRental","id","customerCpf","rentalDate","Date","toISOString","movies","setMovies","rentalMovies","setRentalMovies","selectedDate","setSelectedDate","selectedMovies","setSelectedMovies","schema","object","shape","string","required","handleSubmit","data","current","setErrors","validate","abortEarly","console","log","length","error","movieRentals","map","mr","movieId","rentalId","push","err","validationErrors","ValidationError","inner","forEach","path","message","movieHeadCells","numeric","disablePadding","label","handleCancel","handleSelectedDate","date","mapToMoviesListViewModel","moviesList","m","name","genre","creationDate","toLocaleDateString","status","handleDeleteMovie","rentalMoviesIds","r","originalMovies","filter","indexOf","newRentalMovies","rm","handleSelectMovie","moviesSelectedIds","originalMoviesSelected","loadData","allMovies","params","actualRentalOriginalMovies","setData","paper","form","formControl","lang","submit","defaultProps","propTypes","any"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react/forbid-prop-types */\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport MomentUtils from '@date-io/moment';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { TextField } from 'unform-material-ui';\nimport FormControl from '@material-ui/core/FormControl';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport MovieListDialog from './RentalFormMovieList';\nimport Table from '../../components/Table';\nimport { getRental, saveRental } from '../../services/Rentals/rentalService';\nimport { getMovies } from '../../services/Movies/movieService';\nimport useStyles from './styles';\n\nexport default function RentalForm({ history, match }) {\n  const classes = useStyles();\n\n  const formRef = useRef(null);\n\n  const [rental, setRental] = useState({\n    id: 0,\n    customerCpf: '',\n    rentalDate: new Date().toISOString(),\n  });\n\n  const [movies, setMovies] = useState([]);\n  const [rentalMovies, setRentalMovies] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedMovies, setSelectedMovies] = useState([]);\n\n  const schema = Yup.object().shape({\n    customerCpf: Yup.string().required('CPF é obrigatório!'),\n  });\n\n  const handleSubmit = async data => {\n    try {\n      // Remove all previous errors\n      formRef.current.setErrors({});\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n      // Validation passed\n      data.rentalDate = selectedDate;\n      console.log(rentalMovies);\n      if (rentalMovies.length <= 0) {\n        toast.error('Pelo menos um filme deve ser adicionado!');\n        return;\n      }\n      data.movieRentals = rentalMovies.map(mr => {\n        return {\n          movieId: mr.id,\n          rentalId: rental.id,\n        };\n      });\n      await saveRental(data);\n      history.push('/rentals');\n    } catch (err) {\n      const validationErrors = {};\n      if (err instanceof Yup.ValidationError) {\n        err.inner.forEach(error => {\n          validationErrors[error.path] = error.message;\n        });\n        formRef.current.setErrors(validationErrors);\n      }\n    }\n  };\n\n  const movieHeadCells = [\n    {\n      id: 'name',\n      numeric: false,\n      disablePadding: true,\n      label: 'Nome',\n    },\n    {\n      id: 'genre',\n      numeric: false,\n      disablePadding: true,\n      label: 'Gênero',\n    },\n  ];\n\n  const handleCancel = () => {\n    history.push('/rentals');\n  };\n\n  const handleSelectedDate = date => {\n    setSelectedDate(date);\n  };\n\n  const mapToMoviesListViewModel = moviesList => {\n    return moviesList.map(m => {\n      return {\n        id: m.id,\n        name: m.name,\n        genre: m.genre.name,\n        creationDate: new Date(m.creationDate).toLocaleDateString(),\n        status: m.status === 1 ? 'Ativo' : 'Inativo',\n      };\n    });\n  };\n\n  const handleDeleteMovie = async () => {\n    const rentalMoviesIds = rentalMovies.map(r => r.id);\n    const originalMovies = movies.filter(\n      m => rentalMoviesIds.indexOf(m.id) !== -1\n    );\n    const newRentalMovies = originalMovies.filter(\n      rm => selectedMovies.indexOf(rm.id) === -1\n    );\n    setRentalMovies(mapToMoviesListViewModel(newRentalMovies));\n    setSelectedMovies([]);\n  };\n\n  const handleSelectMovie = moviesSelectedIds => {\n    const originalMoviesSelected = movies.filter(\n      m => moviesSelectedIds.indexOf(m.id) !== -1\n    );\n\n    setRentalMovies(mapToMoviesListViewModel(originalMoviesSelected));\n    setSelectedMovies([]);\n  };\n\n  useEffect(() => {\n    const loadData = async () => {\n      const { data: allMovies } = await getMovies();\n      setMovies(allMovies);\n      const { id } = match.params;\n      console.log(id);\n      if (id > 0) {\n        const { data } = await getRental(id);\n        console.log(data);\n        const rentalMoviesIds = data.movieRentals.map(mr => mr.movieId);\n        const actualRentalOriginalMovies = movies.filter(\n          m => rentalMoviesIds.indexOf(m.id) !== -1\n        );\n        console.log(allMovies);\n        console.log(rentalMoviesIds);\n        formRef.current.setData(data);\n        setRental(data);\n        console.log(mapToMoviesListViewModel(actualRentalOriginalMovies));\n        setRentalMovies(mapToMoviesListViewModel(actualRentalOriginalMovies));\n      } else {\n        formRef.current.setData(rental);\n      }\n    };\n    loadData();\n  }, []);\n\n  return (\n    <Container component=\"main\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Filme\n        </Typography>\n        <Form\n          ref={formRef}\n          onSubmit={handleSubmit}\n          className={classes.form}\n          noValidate\n        >\n          <TextField\n            name=\"customerCpf\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            label=\"CPF Cliente\"\n            autoComplete=\"customrCpf\"\n            autoFocus\n          />\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"DD/MM/YYYY\"\n                margin=\"normal\"\n                label=\"Data Locação\"\n                value={selectedDate}\n                onChange={handleSelectedDate}\n                KeyboardButtonProps={{\n                  lang: 'pt-BR',\n                }}\n              />\n            </MuiPickersUtilsProvider>\n          </FormControl>\n          <MovieListDialog\n            onConfirm={handleSelectMovie}\n            selectedItems={rentalMovies.map(r => r.id)}\n          />\n          <Table\n            title=\"Filmes\"\n            headCells={movieHeadCells}\n            rows={rentalMovies}\n            selected={selectedMovies}\n            setSelected={setSelectedMovies}\n            defaultSortedProperty=\"name\"\n            onDelete={handleDeleteMovie}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Salvar\n          </Button>\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={handleCancel}\n          >\n            Cancelar\n          </Button>\n        </Form>\n      </div>\n    </Container>\n  );\n}\n\nRentalForm.defaultProps = {\n  history: null,\n  match: null,\n};\n\nRentalForm.propTypes = {\n  history: PropTypes.any,\n  match: PropTypes.any,\n};\n"]},"metadata":{},"sourceType":"module"}