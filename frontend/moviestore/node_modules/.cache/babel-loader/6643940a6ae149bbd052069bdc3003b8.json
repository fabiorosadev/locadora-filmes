{"ast":null,"code":"var _jsxFileName = \"/Users/fabiorosa/Study/locadora-filmes/frontend/moviestore/src/pages/Auth/Registration/index.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\n/* eslint-disable react/forbid-prop-types */\nimport React, { useRef } from 'react';\nimport { Form } from '@unform/web';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { TextField } from 'unform-material-ui';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { register } from '../../../services/Auth/authService';\nimport useStyles from './styles';\nexport default function Registration({\n  history,\n  location\n}) {\n  const classes = useStyles();\n  const formRef = useRef(null);\n  const schema = Yup.object().shape({\n    email: Yup.string().email('Email inválido!').required('Email é obrigatório!'),\n    password: Yup.string().required('Senha é obrigatória!'),\n    repeatPassword: Yup.string().required('Informe novamente a senha')\n  });\n\n  const handleLogin = () => {\n    history.push('/auth');\n  };\n\n  const handleSubmit = async data => {\n    try {\n      // Remove all previous errors\n      formRef.current.setErrors({});\n      await schema.validate(data, {\n        abortEarly: false\n      }); // Validation passed\n\n      await register(data.email, data.password);\n      const {\n        state\n      } = location;\n      window.location = state ? state.from.pathname : '/';\n    } catch (err) {\n      const validationErrors = {};\n\n      if (err instanceof Yup.ValidationError) {\n        err.inner.forEach(error => {\n          validationErrors[error.path] = error.message;\n        });\n        formRef.current.setErrors(validationErrors);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Criar Conta\"), /*#__PURE__*/React.createElement(Form, {\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    label: \"Email\",\n    name: \"email\",\n    autoComplete: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Senha\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"repeatPassword\",\n    label: \"Repetir Senha\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Registrar\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    variant: \"body2\",\n    onClick: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"Ja possui cadastro? Login\"))))));\n}\nRegistration.defaultProps = {\n  history: null,\n  location: null\n};\nRegistration.propTypes = {\n  history: PropTypes.any,\n  location: PropTypes.any\n};","map":{"version":3,"sources":["/Users/fabiorosa/Study/locadora-filmes/frontend/moviestore/src/pages/Auth/Registration/index.js"],"names":["React","useRef","Form","Avatar","Button","CssBaseline","Link","Grid","LockOutlinedIcon","Typography","Container","TextField","Yup","PropTypes","register","useStyles","Registration","history","location","classes","formRef","schema","object","shape","email","string","required","password","repeatPassword","handleLogin","push","handleSubmit","data","current","setErrors","validate","abortEarly","state","window","from","pathname","err","validationErrors","ValidationError","inner","forEach","error","path","message","paper","avatar","form","submit","defaultProps","propTypes","any"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react/forbid-prop-types */\nimport React, { useRef } from 'react';\nimport { Form } from '@unform/web';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { TextField } from 'unform-material-ui';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { register } from '../../../services/Auth/authService';\nimport useStyles from './styles';\n\nexport default function Registration({ history, location }) {\n  const classes = useStyles();\n\n  const formRef = useRef(null);\n\n  const schema = Yup.object().shape({\n    email: Yup.string()\n      .email('Email inválido!')\n      .required('Email é obrigatório!'),\n    password: Yup.string().required('Senha é obrigatória!'),\n    repeatPassword: Yup.string().required('Informe novamente a senha'),\n  });\n\n  const handleLogin = () => {\n    history.push('/auth');\n  };\n\n  const handleSubmit = async data => {\n    try {\n      // Remove all previous errors\n      formRef.current.setErrors({});\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n      // Validation passed\n      await register(data.email, data.password);\n      const { state } = location;\n      window.location = state ? state.from.pathname : '/';\n    } catch (err) {\n      const validationErrors = {};\n      if (err instanceof Yup.ValidationError) {\n        err.inner.forEach(error => {\n          validationErrors[error.path] = error.message;\n        });\n        formRef.current.setErrors(validationErrors);\n      }\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Criar Conta\n        </Typography>\n        <Form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            required\n            fullWidth\n            label=\"Email\"\n            name=\"email\"\n            autoComplete=\"email\"\n          />\n          <TextField\n            variant=\"outlined\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Senha\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <TextField\n            variant=\"outlined\"\n            required\n            fullWidth\n            name=\"repeatPassword\"\n            label=\"Repetir Senha\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Registrar\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link variant=\"body2\" onClick={handleLogin}>\n                Ja possui cadastro? Login\n              </Link>\n            </Grid>\n          </Grid>\n        </Form>\n      </div>\n    </Container>\n  );\n}\n\nRegistration.defaultProps = {\n  history: null,\n  location: null,\n};\n\nRegistration.propTypes = {\n  history: PropTypes.any,\n  location: PropTypes.any,\n};\n"]},"metadata":{},"sourceType":"module"}