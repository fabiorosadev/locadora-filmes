{"ast":null,"code":"import jwtDecode from 'jwt-decode';\nimport http, { setJwt } from '../httpService';\nconst apiAuthEndpoint = '/auth';\nconst tokenKey = 'token';\nexport async function login(userName, password) {\n  const {\n    data\n  } = await http.post(`${apiAuthEndpoint}/login`, {\n    userName,\n    password\n  });\n  localStorage.setItem(tokenKey, data.token);\n}\nexport async function register(userName, password) {\n  const {\n    data\n  } = await http.post(`${apiAuthEndpoint}/register`, {\n    userName,\n    password,\n    role: 'Admin'\n  });\n  localStorage.setItem(tokenKey, data.token);\n}\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\nsetJwt(getJwt());\nexport default {\n  login,\n  register,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt\n};","map":{"version":3,"sources":["/Users/fabiorosa/Study/locadora-filmes/frontend/moviestore/src/services/Auth/authService.js"],"names":["jwtDecode","http","setJwt","apiAuthEndpoint","tokenKey","login","userName","password","data","post","localStorage","setItem","token","register","role","loginWithJwt","jwt","logout","removeItem","getCurrentUser","getItem","ex","getJwt"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,IAAeC,MAAf,QAA6B,gBAA7B;AAEA,MAAMC,eAAe,GAAG,OAAxB;AACA,MAAMC,QAAQ,GAAG,OAAjB;AAEA,OAAO,eAAeC,KAAf,CAAqBC,QAArB,EAA+BC,QAA/B,EAAyC;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMP,IAAI,CAACQ,IAAL,CAAW,GAAEN,eAAgB,QAA7B,EAAsC;AAC3DG,IAAAA,QAD2D;AAE3DC,IAAAA;AAF2D,GAAtC,CAAvB;AAIAG,EAAAA,YAAY,CAACC,OAAb,CAAqBP,QAArB,EAA+BI,IAAI,CAACI,KAApC;AACD;AAED,OAAO,eAAeC,QAAf,CAAwBP,QAAxB,EAAkCC,QAAlC,EAA4C;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMP,IAAI,CAACQ,IAAL,CAAW,GAAEN,eAAgB,WAA7B,EAAyC;AAC9DG,IAAAA,QAD8D;AAE9DC,IAAAA,QAF8D;AAG9DO,IAAAA,IAAI,EAAE;AAHwD,GAAzC,CAAvB;AAKAJ,EAAAA,YAAY,CAACC,OAAb,CAAqBP,QAArB,EAA+BI,IAAI,CAACI,KAApC;AACD;AAED,OAAO,SAASG,YAAT,CAAsBC,GAAtB,EAA2B;AAChCN,EAAAA,YAAY,CAACC,OAAb,CAAqBP,QAArB,EAA+BY,GAA/B;AACD;AAED,OAAO,SAASC,MAAT,GAAkB;AACvBP,EAAAA,YAAY,CAACQ,UAAb,CAAwBd,QAAxB;AACD;AAED,OAAO,SAASe,cAAT,GAA0B;AAC/B,MAAI;AACF,UAAMH,GAAG,GAAGN,YAAY,CAACU,OAAb,CAAqBhB,QAArB,CAAZ;AACA,WAAOJ,SAAS,CAACgB,GAAD,CAAhB;AACD,GAHD,CAGE,OAAOK,EAAP,EAAW;AACX,WAAO,IAAP;AACD;AACF;AAED,OAAO,SAASC,MAAT,GAAkB;AACvB,SAAOZ,YAAY,CAACU,OAAb,CAAqBhB,QAArB,CAAP;AACD;AAEDF,MAAM,CAACoB,MAAM,EAAP,CAAN;AAEA,eAAe;AACbjB,EAAAA,KADa;AAEbQ,EAAAA,QAFa;AAGbE,EAAAA,YAHa;AAIbE,EAAAA,MAJa;AAKbE,EAAAA,cALa;AAMbG,EAAAA;AANa,CAAf","sourcesContent":["import jwtDecode from 'jwt-decode';\nimport http, { setJwt } from '../httpService';\n\nconst apiAuthEndpoint = '/auth';\nconst tokenKey = 'token';\n\nexport async function login(userName, password) {\n  const { data } = await http.post(`${apiAuthEndpoint}/login`, {\n    userName,\n    password,\n  });\n  localStorage.setItem(tokenKey, data.token);\n}\n\nexport async function register(userName, password) {\n  const { data } = await http.post(`${apiAuthEndpoint}/register`, {\n    userName,\n    password,\n    role: 'Admin',\n  });\n  localStorage.setItem(tokenKey, data.token);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\n\nsetJwt(getJwt());\n\nexport default {\n  login,\n  register,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt,\n};\n"]},"metadata":{},"sourceType":"module"}