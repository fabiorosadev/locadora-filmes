{"ast":null,"code":"var _jsxFileName = \"/Users/fabiorosa/Study/locadora-filmes/frontend/moviestore/src/components/Table/index.js\";\n\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport { Table as MaterialTable } from '@material-ui/core';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PropTypes from 'prop-types';\nimport TableHead from './TableHead';\nimport TableToolbar from './TableToolbar';\nimport useStyles from './styles';\nexport default function Table({\n  title,\n  headCells,\n  rows,\n  selected,\n  setSelected,\n  defaultSortedProperty\n}) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState(defaultSortedProperty);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  function descendingComparator(a, b, auxOrderBy) {\n    if (b[auxOrderBy] < a[auxOrderBy]) {\n      return -1;\n    }\n\n    if (b[auxOrderBy] > a[auxOrderBy]) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  function getComparator(auxOrder, auxOrderBy) {\n    return auxOrder === 'desc' ? (a, b) => descendingComparator(a, b, auxOrderBy) : (a, b) => -descendingComparator(a, b, auxOrderBy);\n  }\n\n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const auxOrder = comparator(a[0], b[0]);\n      if (auxOrder !== 0) return auxOrder;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableToolbar, {\n    numSelected: selected.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: \"medium\",\n    \"aria-label\": \"enhanced table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    title: title,\n    headCells: headCells,\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row.name);\n    const labelId = `enhanced-table-checkbox-${index}`;\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      onClick: event => handleClick(event, row.name),\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row.name,\n      selected: isItemSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isItemSelected,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      id: labelId,\n      scope: \"row\",\n      padding: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 23\n      }\n    }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }\n    }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    }, row.fat), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 23\n      }\n    }, row.carbs), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 23\n      }\n    }, row.protein));\n  }), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  })));\n}\nTable.propTypes = {\n  title: PropTypes.string.isRequired,\n  headCells: PropTypes.array.isRequired,\n  rows: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  setSelected: PropTypes.func.isRequired,\n  defaultSortedProperty: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/fabiorosa/Study/locadora-filmes/frontend/moviestore/src/components/Table/index.js"],"names":["React","Table","MaterialTable","TableBody","TableCell","TableContainer","TablePagination","TableRow","Paper","Checkbox","PropTypes","TableHead","TableToolbar","useStyles","title","headCells","rows","selected","setSelected","defaultSortedProperty","classes","order","setOrder","useState","orderBy","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","descendingComparator","a","b","auxOrderBy","getComparator","auxOrder","stableSort","array","comparator","stabilizedThis","map","el","index","sort","handleRequestSort","event","property","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","name","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","isSelected","emptyRows","Math","min","root","paper","table","row","isItemSelected","labelId","calories","fat","carbs","protein","height","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport { Table as MaterialTable } from '@material-ui/core';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PropTypes from 'prop-types';\nimport TableHead from './TableHead';\nimport TableToolbar from './TableToolbar';\nimport useStyles from './styles';\n\nexport default function Table({\n  title,\n  headCells,\n  rows,\n  selected,\n  setSelected,\n  defaultSortedProperty,\n}) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState(defaultSortedProperty);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  function descendingComparator(a, b, auxOrderBy) {\n    if (b[auxOrderBy] < a[auxOrderBy]) {\n      return -1;\n    }\n    if (b[auxOrderBy] > a[auxOrderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n\n  function getComparator(auxOrder, auxOrderBy) {\n    return auxOrder === 'desc'\n      ? (a, b) => descendingComparator(a, b, auxOrderBy)\n      : (a, b) => -descendingComparator(a, b, auxOrderBy);\n  }\n\n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const auxOrder = comparator(a[0], b[0]);\n      if (auxOrder !== 0) return auxOrder;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <MaterialTable\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size=\"medium\"\n            aria-label=\"enhanced table\"\n          >\n            <TableHead\n              title={title}\n              headCells={headCells}\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </MaterialTable>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n\nTable.propTypes = {\n  title: PropTypes.string.isRequired,\n  headCells: PropTypes.array.isRequired,\n  rows: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  setSelected: PropTypes.func.isRequired,\n  defaultSortedProperty: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}