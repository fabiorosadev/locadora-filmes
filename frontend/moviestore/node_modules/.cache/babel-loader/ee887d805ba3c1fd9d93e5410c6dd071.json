{"ast":null,"code":"import jwtDecode from 'jwt-decode';\nimport http, { setJwt } from '../httpService';\nconst apiAuthEndpoint = '/auth';\nconst tokenKey = 'token';\nexport async function login(email, password) {\n  const {\n    data: jwt\n  } = await http.post(`${apiAuthEndpoint}/login`, {\n    email,\n    password\n  });\n  localStorage.setItem(tokenKey, jwt);\n}\nexport async function register(email, password) {\n  const {\n    data: jwt\n  } = await http.post(apiAuthEndpoint, {\n    email,\n    password\n  });\n  localStorage.setItem(tokenKey, jwt);\n}\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\nsetJwt(getJwt());\nexport default {\n  login,\n  register,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt\n};","map":{"version":3,"sources":["/Users/fabiorosa/Study/locadora-filmes/frontend/moviestore/src/services/Auth/authService.js"],"names":["jwtDecode","http","setJwt","apiAuthEndpoint","tokenKey","login","email","password","data","jwt","post","localStorage","setItem","register","loginWithJwt","logout","removeItem","getCurrentUser","getItem","ex","getJwt"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,IAAeC,MAAf,QAA6B,gBAA7B;AAEA,MAAMC,eAAe,GAAG,OAAxB;AACA,MAAMC,QAAQ,GAAG,OAAjB;AAEA,OAAO,eAAeC,KAAf,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AAC3C,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAgB,MAAMR,IAAI,CAACS,IAAL,CAAW,GAAEP,eAAgB,QAA7B,EAAsC;AAChEG,IAAAA,KADgE;AAEhEC,IAAAA;AAFgE,GAAtC,CAA5B;AAIAI,EAAAA,YAAY,CAACC,OAAb,CAAqBR,QAArB,EAA+BK,GAA/B;AACD;AAED,OAAO,eAAeI,QAAf,CAAwBP,KAAxB,EAA+BC,QAA/B,EAAyC;AAC9C,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAgB,MAAMR,IAAI,CAACS,IAAL,CAAUP,eAAV,EAA2B;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA3B,CAA5B;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqBR,QAArB,EAA+BK,GAA/B;AACD;AAED,OAAO,SAASK,YAAT,CAAsBL,GAAtB,EAA2B;AAChCE,EAAAA,YAAY,CAACC,OAAb,CAAqBR,QAArB,EAA+BK,GAA/B;AACD;AAED,OAAO,SAASM,MAAT,GAAkB;AACvBJ,EAAAA,YAAY,CAACK,UAAb,CAAwBZ,QAAxB;AACD;AAED,OAAO,SAASa,cAAT,GAA0B;AAC/B,MAAI;AACF,UAAMR,GAAG,GAAGE,YAAY,CAACO,OAAb,CAAqBd,QAArB,CAAZ;AACA,WAAOJ,SAAS,CAACS,GAAD,CAAhB;AACD,GAHD,CAGE,OAAOU,EAAP,EAAW;AACX,WAAO,IAAP;AACD;AACF;AAED,OAAO,SAASC,MAAT,GAAkB;AACvB,SAAOT,YAAY,CAACO,OAAb,CAAqBd,QAArB,CAAP;AACD;AAEDF,MAAM,CAACkB,MAAM,EAAP,CAAN;AAEA,eAAe;AACbf,EAAAA,KADa;AAEbQ,EAAAA,QAFa;AAGbC,EAAAA,YAHa;AAIbC,EAAAA,MAJa;AAKbE,EAAAA,cALa;AAMbG,EAAAA;AANa,CAAf","sourcesContent":["import jwtDecode from 'jwt-decode';\nimport http, { setJwt } from '../httpService';\n\nconst apiAuthEndpoint = '/auth';\nconst tokenKey = 'token';\n\nexport async function login(email, password) {\n  const { data: jwt } = await http.post(`${apiAuthEndpoint}/login`, {\n    email,\n    password,\n  });\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport async function register(email, password) {\n  const { data: jwt } = await http.post(apiAuthEndpoint, { email, password });\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\n\nsetJwt(getJwt());\n\nexport default {\n  login,\n  register,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt,\n};\n"]},"metadata":{},"sourceType":"module"}