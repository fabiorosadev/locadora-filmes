{"ast":null,"code":"import http from '../httpService';\nconst apiGenresEndpoint = '/genres';\n\nfunction genreUrl(id) {\n  return `${apiGenresEndpoint}/${id}`;\n}\n\nexport function getGenres() {\n  return http.get(apiGenresEndpoint);\n}\nexport function getGenre(id) {\n  return http.get(genreUrl(id));\n}\nexport function saveGenre(genre) {\n  if (genre.id) {\n    return http.put(apiGenresEndpoint, genre);\n  }\n\n  return http.post(apiGenresEndpoint, genre);\n}\nexport function deleteGenre(id) {\n  return http.delete(genreUrl(id));\n}\nexport function deleteGenres(genreIds) {\n  return http.delete(`${apiGenresEndpoint}/RemovemUltiple`, genreIds);\n}","map":{"version":3,"sources":["/Users/fabiorosa/Study/locadora-filmes/frontend/moviestore/src/services/Genres/genreService.js"],"names":["http","apiGenresEndpoint","genreUrl","id","getGenres","get","getGenre","saveGenre","genre","put","post","deleteGenre","delete","deleteGenres","genreIds"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB;AAEA,MAAMC,iBAAiB,GAAG,SAA1B;;AAEA,SAASC,QAAT,CAAkBC,EAAlB,EAAsB;AACpB,SAAQ,GAAEF,iBAAkB,IAAGE,EAAG,EAAlC;AACD;;AAED,OAAO,SAASC,SAAT,GAAqB;AAC1B,SAAOJ,IAAI,CAACK,GAAL,CAASJ,iBAAT,CAAP;AACD;AAED,OAAO,SAASK,QAAT,CAAkBH,EAAlB,EAAsB;AAC3B,SAAOH,IAAI,CAACK,GAAL,CAASH,QAAQ,CAACC,EAAD,CAAjB,CAAP;AACD;AAED,OAAO,SAASI,SAAT,CAAmBC,KAAnB,EAA0B;AAC/B,MAAIA,KAAK,CAACL,EAAV,EAAc;AACZ,WAAOH,IAAI,CAACS,GAAL,CAASR,iBAAT,EAA4BO,KAA5B,CAAP;AACD;;AACD,SAAOR,IAAI,CAACU,IAAL,CAAUT,iBAAV,EAA6BO,KAA7B,CAAP;AACD;AAED,OAAO,SAASG,WAAT,CAAqBR,EAArB,EAAyB;AAC9B,SAAOH,IAAI,CAACY,MAAL,CAAYV,QAAQ,CAACC,EAAD,CAApB,CAAP;AACD;AAED,OAAO,SAASU,YAAT,CAAsBC,QAAtB,EAAgC;AACrC,SAAOd,IAAI,CAACY,MAAL,CAAa,GAAEX,iBAAkB,iBAAjC,EAAmDa,QAAnD,CAAP;AACD","sourcesContent":["import http from '../httpService';\n\nconst apiGenresEndpoint = '/genres';\n\nfunction genreUrl(id) {\n  return `${apiGenresEndpoint}/${id}`;\n}\n\nexport function getGenres() {\n  return http.get(apiGenresEndpoint);\n}\n\nexport function getGenre(id) {\n  return http.get(genreUrl(id));\n}\n\nexport function saveGenre(genre) {\n  if (genre.id) {\n    return http.put(apiGenresEndpoint, genre);\n  }\n  return http.post(apiGenresEndpoint, genre);\n}\n\nexport function deleteGenre(id) {\n  return http.delete(genreUrl(id));\n}\n\nexport function deleteGenres(genreIds) {\n  return http.delete(`${apiGenresEndpoint}/RemovemUltiple`, genreIds);\n}\n"]},"metadata":{},"sourceType":"module"}