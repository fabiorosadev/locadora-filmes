{"ast":null,"code":"var _jsxFileName = \"/Users/fabiorosa/Study/locadora-filmes/frontend/moviestore/src/pages/Auth/index.js\";\nimport React, { useRef } from 'react';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; //import Input from '../../components/Input';\n\nimport { TextField } from 'unform-material-ui';\nimport useStyles from './styles';\nexport default function SignIn() {\n  const classes = useStyles();\n  const formRef = useRef(null);\n\n  async function handleSubmit(data) {\n    try {\n      console.log(data); // Remove all previous errors\n\n      formRef.current.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().email().required('Email é obrigatório!'),\n        password: Yup.string().min(6).required('Senha é obrigatória!')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      }); // Validation passed\n    } catch (err) {\n      const validationErrors = {};\n\n      if (err instanceof Yup.ValidationError) {\n        err.inner.forEach(error => {\n          validationErrors[error.path] = error.message;\n        });\n        formRef.current.setErrors(validationErrors);\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    type: \"email\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    label: \"Email\",\n    autoComplete: \"email\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    type: \"password\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    label: \"Senha\",\n    autoComplete: \"current-password\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Entrar\"))));\n}","map":{"version":3,"sources":["/Users/fabiorosa/Study/locadora-filmes/frontend/moviestore/src/pages/Auth/index.js"],"names":["React","useRef","Form","Yup","Avatar","Button","Container","CssBaseline","Typography","LockOutlinedIcon","TextField","useStyles","SignIn","classes","formRef","handleSubmit","data","console","log","current","setErrors","schema","object","shape","email","string","required","password","min","validate","abortEarly","err","validationErrors","ValidationError","inner","forEach","error","path","message","paper","avatar","form","submit"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n//import Input from '../../components/Input';\nimport { TextField } from 'unform-material-ui';\nimport useStyles from './styles';\n\nexport default function SignIn() {\n  const classes = useStyles();\n\n  const formRef = useRef(null);\n\n  async function handleSubmit(data) {\n    try {\n      console.log(data);\n      // Remove all previous errors\n      formRef.current.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string()\n          .email()\n          .required('Email é obrigatório!'),\n        password: Yup.string()\n          .min(6)\n          .required('Senha é obrigatória!'),\n      });\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n      // Validation passed\n    } catch (err) {\n      const validationErrors = {};\n      if (err instanceof Yup.ValidationError) {\n        err.inner.forEach(error => {\n          validationErrors[error.path] = error.message;\n        });\n        formRef.current.setErrors(validationErrors);\n      }\n    }\n  }\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Login\n        </Typography>\n        <Form\n          ref={formRef}\n          onSubmit={handleSubmit}\n          className={classes.form}\n          noValidate\n        >\n          <Input\n            name=\"email\"\n            type=\"email\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            label=\"Email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <Input\n            name=\"password\"\n            type=\"password\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            label=\"Senha\"\n            autoComplete=\"current-password\"\n            autoFocus\n          />\n          {/* <button type=\"submit\">Sign in</button> */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Entrar\n          </Button>\n        </Form>\n      </div>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}