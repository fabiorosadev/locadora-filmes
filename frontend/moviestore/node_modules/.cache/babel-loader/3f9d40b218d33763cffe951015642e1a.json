{"ast":null,"code":"var _jsxFileName = \"/Users/fabiorosa/Study/locadora-filmes/frontend/moviestore/src/pages/RentalForm/index.js\";\n\n/* eslint-disable no-param-reassign */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\n/* eslint-disable react/forbid-prop-types */\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport MomentUtils from '@date-io/moment';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { TextField } from 'unform-material-ui';\nimport FormControl from '@material-ui/core/FormControl';\nimport PropTypes from 'prop-types';\nimport MovieListDialog from './RentalFormMovieList';\nimport Table from '../../components/Table';\nimport { getRental, saveRental } from '../../services/Rentals/rentalService';\nimport { getMovies } from '../../services/Movies/movieService';\nimport useStyles from './styles';\nexport default function RentalForm({\n  history,\n  match\n}) {\n  const classes = useStyles();\n  const formRef = useRef(null);\n  const [rental, setRental] = useState({\n    id: 0,\n    customerCpf: '',\n    rentalDate: new Date().toISOString()\n  });\n  const [movies, setMovies] = useState([]);\n  const [rentalMovies, setRentalMovies] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedMovies, setSelectedMovies] = useState([]);\n  const schema = Yup.object().shape({\n    customerCpf: Yup.string().required('CPF é obrigatório!'),\n    rentalDate: Yup.date().required('Data de Locação é obrigatória!')\n  });\n\n  const handleSubmit = async data => {\n    try {\n      // Remove all previous errors\n      formRef.current.setErrors({});\n      await schema.validate(data, {\n        abortEarly: false\n      }); // Validation passed\n\n      await saveRental(rental);\n      history.push('/rentals');\n    } catch (err) {\n      const validationErrors = {};\n\n      if (err instanceof Yup.ValidationError) {\n        err.inner.forEach(error => {\n          validationErrors[error.path] = error.message;\n        });\n        formRef.current.setErrors(validationErrors);\n      }\n    }\n  };\n\n  const movieHeadCells = [{\n    id: 'name',\n    numeric: false,\n    disablePadding: true,\n    label: 'Nome'\n  }, {\n    id: 'genre',\n    numeric: false,\n    disablePadding: true,\n    label: 'Gênero'\n  }];\n\n  const handleCancel = () => {\n    history.push('/rentals');\n  };\n\n  const handleSelectedDate = date => {\n    setSelectedDate(date);\n  };\n\n  const handleDeleteMovie = selectedIds => {};\n\n  const handleSelectMovie = moviesSelectedIds => {\n    console.log('moviesSelectedIds', moviesSelectedIds);\n    const originalMoviesSelected = movies.filter(m => moviesSelectedIds.indexOf(m.id) !== -1);\n    const moviesSelected = originalMoviesSelected.map(m => {\n      return {\n        id: m.id,\n        name: m.name,\n        genre: m.genre.name,\n        creationDate: new Date(m.creationDate).toLocaleDateString(),\n        status: m.status === 1 ? 'Ativo' : 'Inativo'\n      };\n    });\n    console.log('moviesSelected', moviesSelected);\n    setRentalMovies(moviesSelected);\n  };\n\n  useEffect(() => {\n    const loadData = async () => {\n      const {\n        data: allMovies\n      } = await getMovies();\n      setMovies(allMovies);\n      const {\n        id\n      } = match.params;\n\n      if (id > 0) {\n        const {\n          data\n        } = await getRental(id);\n        formRef.current.setData(data);\n        setRental(data);\n      } else {\n        formRef.current.setData(rental);\n      }\n    };\n\n    loadData();\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, \"Filme\"), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"customerCpf\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    label: \"CPF Cliente\",\n    autoComplete: \"customrCpf\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"DD/MM/YYYY\",\n    margin: \"normal\",\n    label: \"Data Loca\\xE7\\xE3o\",\n    value: selectedDate,\n    onChange: handleSelectedDate,\n    KeyboardButtonProps: {\n      lang: 'pt-BR'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(MovieListDialog, {\n    onConfirm: handleSelectMovie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    title: \"Filmes\",\n    headCells: movieHeadCells,\n    rows: rentalMovies,\n    selected: selectedMovies,\n    setSelected: setSelectedMovies,\n    defaultSortedProperty: \"name\",\n    onDelete: handleDeleteMovie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, \"Salvar\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, \"Cancelar\"))));\n}\nRentalForm.defaultProps = {\n  history: null,\n  match: null\n};\nRentalForm.propTypes = {\n  history: PropTypes.any,\n  match: PropTypes.any\n};","map":{"version":3,"sources":["/Users/fabiorosa/Study/locadora-filmes/frontend/moviestore/src/pages/RentalForm/index.js"],"names":["React","useRef","useEffect","useState","Form","Yup","Button","Container","CssBaseline","Typography","MomentUtils","MuiPickersUtilsProvider","KeyboardDatePicker","TextField","FormControl","PropTypes","MovieListDialog","Table","getRental","saveRental","getMovies","useStyles","RentalForm","history","match","classes","formRef","rental","setRental","id","customerCpf","rentalDate","Date","toISOString","movies","setMovies","rentalMovies","setRentalMovies","selectedDate","setSelectedDate","selectedMovies","setSelectedMovies","schema","object","shape","string","required","date","handleSubmit","data","current","setErrors","validate","abortEarly","push","err","validationErrors","ValidationError","inner","forEach","error","path","message","movieHeadCells","numeric","disablePadding","label","handleCancel","handleSelectedDate","handleDeleteMovie","selectedIds","handleSelectMovie","moviesSelectedIds","console","log","originalMoviesSelected","filter","m","indexOf","moviesSelected","map","name","genre","creationDate","toLocaleDateString","status","loadData","allMovies","params","setData","paper","form","formControl","lang","submit","defaultProps","propTypes","any"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react/forbid-prop-types */\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport MomentUtils from '@date-io/moment';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { TextField } from 'unform-material-ui';\nimport FormControl from '@material-ui/core/FormControl';\nimport PropTypes from 'prop-types';\nimport MovieListDialog from './RentalFormMovieList';\nimport Table from '../../components/Table';\nimport { getRental, saveRental } from '../../services/Rentals/rentalService';\nimport { getMovies } from '../../services/Movies/movieService';\nimport useStyles from './styles';\n\nexport default function RentalForm({ history, match }) {\n  const classes = useStyles();\n\n  const formRef = useRef(null);\n\n  const [rental, setRental] = useState({\n    id: 0,\n    customerCpf: '',\n    rentalDate: new Date().toISOString(),\n  });\n\n  const [movies, setMovies] = useState([]);\n  const [rentalMovies, setRentalMovies] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedMovies, setSelectedMovies] = useState([]);\n\n  const schema = Yup.object().shape({\n    customerCpf: Yup.string().required('CPF é obrigatório!'),\n    rentalDate: Yup.date().required('Data de Locação é obrigatória!'),\n  });\n\n  const handleSubmit = async data => {\n    try {\n      // Remove all previous errors\n      formRef.current.setErrors({});\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n      // Validation passed\n      await saveRental(rental);\n      history.push('/rentals');\n    } catch (err) {\n      const validationErrors = {};\n      if (err instanceof Yup.ValidationError) {\n        err.inner.forEach(error => {\n          validationErrors[error.path] = error.message;\n        });\n        formRef.current.setErrors(validationErrors);\n      }\n    }\n  };\n\n  const movieHeadCells = [\n    {\n      id: 'name',\n      numeric: false,\n      disablePadding: true,\n      label: 'Nome',\n    },\n    {\n      id: 'genre',\n      numeric: false,\n      disablePadding: true,\n      label: 'Gênero',\n    },\n  ];\n\n  const handleCancel = () => {\n    history.push('/rentals');\n  };\n\n  const handleSelectedDate = date => {\n    setSelectedDate(date);\n  };\n\n  const handleDeleteMovie = selectedIds => {};\n\n  const handleSelectMovie = moviesSelectedIds => {\n    console.log('moviesSelectedIds', moviesSelectedIds);\n    const originalMoviesSelected = movies.filter(\n      m => moviesSelectedIds.indexOf(m.id) !== -1\n    );\n\n    const moviesSelected = originalMoviesSelected.map(m => {\n      return {\n        id: m.id,\n        name: m.name,\n        genre: m.genre.name,\n        creationDate: new Date(m.creationDate).toLocaleDateString(),\n        status: m.status === 1 ? 'Ativo' : 'Inativo',\n      };\n    });\n\n    console.log('moviesSelected', moviesSelected);\n    setRentalMovies(moviesSelected);\n  };\n\n  useEffect(() => {\n    const loadData = async () => {\n      const { data: allMovies } = await getMovies();\n      setMovies(allMovies);\n      const { id } = match.params;\n      if (id > 0) {\n        const { data } = await getRental(id);\n\n        formRef.current.setData(data);\n        setRental(data);\n      } else {\n        formRef.current.setData(rental);\n      }\n    };\n    loadData();\n  }, []);\n\n  return (\n    <Container component=\"main\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Filme\n        </Typography>\n        <Form\n          ref={formRef}\n          onSubmit={handleSubmit}\n          className={classes.form}\n          noValidate\n        >\n          <TextField\n            name=\"customerCpf\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            label=\"CPF Cliente\"\n            autoComplete=\"customrCpf\"\n            autoFocus\n          />\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"DD/MM/YYYY\"\n                margin=\"normal\"\n                label=\"Data Locação\"\n                value={selectedDate}\n                onChange={handleSelectedDate}\n                KeyboardButtonProps={{\n                  lang: 'pt-BR',\n                }}\n              />\n            </MuiPickersUtilsProvider>\n          </FormControl>\n          <MovieListDialog onConfirm={handleSelectMovie} />\n          <Table\n            title=\"Filmes\"\n            headCells={movieHeadCells}\n            rows={rentalMovies}\n            selected={selectedMovies}\n            setSelected={setSelectedMovies}\n            defaultSortedProperty=\"name\"\n            onDelete={handleDeleteMovie}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Salvar\n          </Button>\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={handleCancel}\n          >\n            Cancelar\n          </Button>\n        </Form>\n      </div>\n    </Container>\n  );\n}\n\nRentalForm.defaultProps = {\n  history: null,\n  match: null,\n};\n\nRentalForm.propTypes = {\n  history: PropTypes.any,\n  match: PropTypes.any,\n};\n"]},"metadata":{},"sourceType":"module"}